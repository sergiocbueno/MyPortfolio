name: MyPortfolio Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Cloning repository ${{ github.head_ref }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Installing dotnet core 6
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Verifying dotnet version
        run: dotnet --version
        
      - name: Restoring MyPortfolio dependencies
        run: |
          cd MyPortfolio
          dotnet restore --no-cache

      - name: Building MyPortfolio Application
        run: |
          cd MyPortfolio
          dotnet build --no-restore

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Cloning repository ${{ github.head_ref }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Installing dotnet core 6
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Verifying dotnet version
        run: dotnet --version

      - name: Restoring TestCoverage dependencies
        run: |
          cd TestCoverage
          dotnet restore --no-cache

      - name: Building TestCoverage Application
        run: |
          cd TestCoverage
          dotnet build --no-restore

      - name: Running TestCoverage Unit Tests
        run: |
          cd TestCoverage
          dotnet test

  deploy:
    if: github.ref == 'refs/heads/master'
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: Cloning repository ${{ github.head_ref }}
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: Installing dotnet core 6
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x

      - name: Verifying dotnet version
        run: dotnet --version

      - name: Publish portfolio artifact
        run: |
          cd MyPortfolio
          dotnet publish -c Release -o ../artifact/

      - name: Compress portfolio artifact
        run: |
          zip -r MyPortfolio.zip artifact/

      - name: Create Release
        id: create_release
        permissions:
          contents: write
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: release_v1.${{ github.run_number }}
          release_name: Release v1.${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./MyPortfolio.zip
          asset_name: MyPortfolio-v1.${{ github.run_number }}.zip
          asset_content_type: application/zip